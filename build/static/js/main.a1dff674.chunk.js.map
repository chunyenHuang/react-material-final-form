{"version":3,"sources":["FormFields.jsx","DetailForm.jsx","index.js"],"names":["renderFormField","inName","inLabel","inOptions","inFormFieldProp","inPrefixKey","key","label","formType","formOptions","formObjects","formInputArrayObject","formFormatFunction","formParseFunction","isRequired","isDisabled","type","formKey","toLocaleLowerCase","Typography","variant","map","item","index","className","name","fields","fieldIndex","formInput","fullWidth","component","Select","required","formControlProps","option","MenuItem","value","FormControl","FormLabel","FormGroup","row","FormControlLabel","control","Checkbox","formCheckbox","inRequired","inDisabled","RadioGroup","parseType","Number","String","disabled","Radio","parse","formRadio","TextField","multiline","formTextarea","inFormFormatFunction","inFormParseFunction","margin","InputLabelProps","shrink","format","formDate","formDateTime","replace","normalizePhone","formInputPhone","inType","isNaN","parseFloat","onlyNums","length","slice","DetailForm","state","componentDidMount","renderNestedForm","renderProps","props","metadata","debug","submitButtonText","title","pristine","submitting","invalid","values","field","Grid","xs","container","alignItems","spacing","style","align","Button","color","JSON","stringify","this","nested","loading","onSubmit","data","CircularProgress","mutators","setFieldData","arrayMutators","initialValues","render","handleSubmit","Component","moment","toISOString","text","textarea","phone","number","date","dateWithParseFunction","dateTime","disabledField","radio","radio2","profile","address","street","city","zipCode","selectObject","prop1","prop2","checkbox","ReactDOM","console","log","document","getElementById"],"mappings":"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","file":"static/js/main.a1dff674.chunk.js","sourcesContent":["import React, { Fragment } from 'react'; // eslint-disable-line no-unused-vars\nimport { Field } from 'react-final-form'; // eslint-disable-line no-unused-vars\nimport { FieldArray } from 'react-final-form-arrays'; // eslint-disable-line no-unused-vars\nimport { TextField, Checkbox, Radio, Select } from 'final-form-material-ui';\nimport {\n  RadioGroup, // eslint-disable-line no-unused-vars\n  FormLabel, // eslint-disable-line no-unused-vars\n  MenuItem, // eslint-disable-line no-unused-vars\n  FormGroup, // eslint-disable-line no-unused-vars\n  FormControl, // eslint-disable-line no-unused-vars\n  FormControlLabel, // eslint-disable-line no-unused-vars\n  Typography, // eslint-disable-line no-unused-vars\n} from '@material-ui/core';\nimport Dropzone from 'react-dropzone'; // eslint-disable-line no-unused-vars\n\nexport {\n  renderFormField,\n  formDate,\n  formInput,\n  formInputPhone,\n  formCheckbox,\n  formRadio,\n  formTextarea,\n  formSelect,\n  formFile,\n};\n\nfunction renderFormField(inFormFieldProp = {}, inPrefixKey) {\n  let {\n    key,\n    label,\n    formType = '',\n    formOptions,\n    formObjects,\n    formInputArrayObject,\n    // formDescription,\n    formFormatFunction,\n    formParseFunction,\n    isRequired,\n    isDisabled,\n    type,\n  } = inFormFieldProp;\n\n  const formKey = (inPrefixKey) ? `${inPrefixKey}[${key}]` : key;\n  switch (formType.toLocaleLowerCase()) {\n  case 'object':\n    return (\n      <Fragment>\n        <Typography variant=\"body1\">{label}</Typography>\n        {formObjects.map((item, index) => {\n          return (\n            <div key={index} className=\"nested-form-input-field\">\n              {renderFormField(item, formKey)}\n            </div>\n          );\n        })}\n      </Fragment>);\n  case 'inputarray':\n    return (<Fragment>\n      <Typography variant=\"body1\">{label}</Typography>\n      <FieldArray name={formKey}>\n        {({ fields }) =>\n          fields.map((name, fieldIndex) => {\n            return (\n              <Fragment key={fieldIndex}>\n                {formInputArrayObject.map((item, index) => {\n                  return (\n                    <div key={index} className=\"nested-form-input-field\">\n                      {formInput(`${formKey}[${fieldIndex}][${item.key}]`, item.label)}\n                    </div>\n                  );\n                })}\n              </Fragment>\n            );\n          }\n          )}\n      </FieldArray>\n    </Fragment>);\n  case 'select':\n    return formSelect(formKey, label, formOptions);\n  case 'checkbox':\n    return formCheckbox(formKey, label, formOptions);\n  case 'radio':\n    return formRadio(formKey, label, isRequired, formOptions);\n  case 'textarea':\n    return formTextarea(formKey, label, isRequired);\n  case 'date':\n    return formDate(formKey, label, isRequired, formFormatFunction, formParseFunction);\n  case 'datetime':\n    return formDateTime(formKey, label, isRequired, formFormatFunction, formParseFunction);\n  case 'phone':\n    return formInputPhone(formKey, label, isRequired);\n  default:\n    // text input\n    return formInput(formKey, label, isRequired, isDisabled, type);\n  }\n}\n\nfunction formInput(inName, inLabel, inRequired = true, inDisabled = false, inType = 'text') {\n  return (<Field\n    fullWidth\n    required={inRequired}\n    name={inName}\n    component={TextField}\n    disabled={inDisabled}\n    type={inType}\n    label={inLabel}\n    parse={(value)=>{\n      if(value && inType.toLocaleLowerCase() === 'number' && !isNaN(value)){\n        return parseFloat(value);\n      } else {\n        return value;\n      }\n    }}\n  />);\n}\n\nconst normalizePhone = value => {\n  if (!value) return value;\n  const onlyNums = `${value}`.replace(/[^\\d]/g, '');\n  if (onlyNums.length <= 3) {\n    return onlyNums;\n  }\n  if (onlyNums.length <= 7) {\n    return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 7)}`;\n  }\n  return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 6)}-${onlyNums.slice(6,10)}`;\n};\n\nfunction formInputPhone(inName, inLabel, inRequired = true, inDisabled = false) {\n  return (<Field\n    fullWidth\n    required={inRequired}\n    name={inName}\n    component={TextField}\n    parse={(value)=>{\n      return value.replace(/\\D+/g, '');\n    }}\n    format={normalizePhone}\n    disabled={inDisabled}\n    type=\"text\"\n    label={inLabel}\n  />);\n}\n\nfunction formDate(inName, inLabel, inRequired = true, inFormFormatFunction, inFormParseFunction) {\n  return (\n    <Field\n      className=\"date-field\"\n      name={inName}\n      component={TextField}\n      fullWidth\n      required={inRequired}\n      type=\"date\"\n      margin=\"normal\"\n      label={inLabel}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      format={inFormFormatFunction? inFormFormatFunction : (value)=>{\n        return value;\n      }}\n      parse={inFormParseFunction? inFormParseFunction : (value)=>{\n        return value;\n      }}\n    />);\n}\n\nfunction formDateTime(inName, inLabel, inRequired = true, inFormFormatFunction, inFormParseFunction) {\n  return (\n    <Field\n      className=\"date-field\"\n      name={inName}\n      component={TextField}\n      fullWidth\n      required={inRequired}\n      type=\"datetime-local\"\n      margin=\"normal\"\n      label={inLabel}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      format={inFormFormatFunction? inFormFormatFunction : (value)=>{\n        return value;\n      }}\n      parse={inFormParseFunction? inFormParseFunction : (value)=>{\n        return value;\n      }}\n    />);\n}\n\nfunction formTextarea(inName, inLabel, inRequired = true) {\n  return (<Field\n    fullWidth\n    name={inName}\n    component={TextField}\n    multiline\n    required={inRequired}\n    label={inLabel}\n  />);\n}\n\nfunction formCheckbox(inName, inLabel, inOptions) {\n  return (\n    <FormControl component=\"fieldset\" className=\"form-radio-container\">\n      <FormLabel component=\"legend\">{inLabel}</FormLabel>\n      <FormGroup row>\n        {inOptions.map((option, index)=>{\n          return (<FormControlLabel\n            key={index}\n            label={option.label}\n            control={\n              <Field\n                name={inName}\n                component={Checkbox}\n                type=\"checkbox\"\n                value={option.value}\n              />\n            }\n          />);\n        })}\n      </FormGroup>\n    </FormControl>);\n}\n\nfunction formRadio(inName, inLabel, inRequired = true, inOptions, inDisabled = false) {\n  return (\n    <FormControl component=\"fieldset\" className=\"form-radio-container\">\n      <FormLabel component=\"legend\" >{inLabel}</FormLabel>\n      <RadioGroup row>\n        {inOptions.map((option, index)=>{\n          let parseType;\n          switch(typeof(option.value)){\n          case 'number':\n            parseType = Number;\n            break;\n          case 'string':\n          default:\n            parseType = String;\n          }\n          return (\n            <FormControlLabel\n              key={index}\n              label={option.label}\n              control={\n                <Field\n                  name={inName}\n                  disabled={inDisabled}\n                  required={inRequired}\n                  component={Radio}\n                  type=\"radio\"\n                  value={option.value}\n                  parse={parseType}\n                />\n              }\n            />);\n        })}\n      </RadioGroup>\n    </FormControl>);\n}\n\nfunction formSelect(inName, inLabel, inOptions) {\n  return (\n    <Field\n      fullWidth\n      name={inName}\n      component={Select}\n      label={inLabel}\n      required={true}\n      formControlProps={{ fullWidth: true }}\n    >\n      {inOptions.map((option, index)=>{\n        return (<MenuItem key={index} value={option.value}>{option.label}</MenuItem>);\n      })}\n    </Field>);\n}\n\nfunction formFile(inName, inLabel, inRequired, inOptions, inDisabled, inForm) {\n  const onDrop = (files) => {\n    console.log(files);\n    // upload and save the link.\n    inForm.change(inName, files);\n    inForm.blur(inName);\n  };\n\n  return (\n    <Fragment>\n      <Field name={inName}>\n        {() => (\n          <Fragment>\n            <label>{inLabel}</label>\n            <Dropzone onDrop={onDrop}>\n              {({ getRootProps, getInputProps }) => (\n                <section>\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <h4>Drag 'n' drop some files here, or click to select files</h4>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n          </Fragment>\n        )}\n      </Field>\n    </Fragment>\n  );\n}\n","import React, { Component, Fragment } from 'react'; // eslint-disable-line no-unused-vars\n\nimport { Form } from 'react-final-form'; // eslint-disable-line no-unused-vars\nimport arrayMutators from 'final-form-arrays';\nimport setFieldData from 'final-form-set-field-data';\n\nimport {\n  Typography, // eslint-disable-line no-unused-vars\n  Grid, // eslint-disable-line no-unused-vars\n  Button, // eslint-disable-line no-unused-vars\n  CircularProgress, // eslint-disable-line no-unused-vars\n} from '@material-ui/core';\n\nimport {\n  renderFormField,\n} from './FormFields';\n\nimport './DetailForm.css';\n\nexport default class DetailForm extends Component {\n  state = {};\n\n  componentDidMount = () => {}\n\n  renderNestedForm = (renderProps) => {\n    const {\n      metadata,\n      debug,\n      submitButtonText = 'Save'\n    } = this.props;\n    const title = this.props.title || this.props.metadata.title || 'Form';\n    const {\n      // handleSubmit,\n      pristine,\n      // form,\n      submitting,\n      invalid,\n      values,\n    } = renderProps;\n\n    return (\n      <Fragment>\n        <Typography variant=\"h5\">\n          {title}\n        </Typography>\n          \n        <hr />\n        \n        {metadata.fields.map((field, index)=>{\n          return (<Grid item xs={12} key={index} className=\"form-field-container\">\n            {renderFormField(field)}\n          </Grid>);\n        })}\n\n        <Grid container alignItems=\"flex-start\" spacing={8} style={{ 'marginTop': '20px' }}>\n          <Grid item xs={6} align=\"left\">\n            {/* <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={()=>{\n                  this.resetConfirm(form);\n              }}\n              disabled={submitting}\n              >\n              Reset\n              </Button> */}\n          </Grid>\n          <Grid item xs={6} align=\"right\">\n            <Button \n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              disabled={submitting || invalid || pristine}\n            >\n              {submitButtonText}\n            </Button>\n          </Grid>\n        </Grid>\n        {\n          debug &&\n          <pre>{JSON.stringify((values || {}), 0, 2)}</pre>\n        }\n      </Fragment>\n    );\n  };\n\n  render() {\n    const {\n      nested,\n      loading,\n      onSubmit,\n      data,\n      metadata,\n      renderProps\n    } = this.props;\n\n    const title = this.props.title || this.props.metadata.title || 'Form';\n\n    return (\n      <div className=\"react-material-final-form\">        \n        {loading && \n          <Grid item xs={12} align=\"center\">\n            <CircularProgress />\n          </Grid>}\n\n        {\n          metadata && nested && renderProps &&\n            this.renderNestedForm(renderProps)\n        }\n\n        {\n          metadata && !nested && title &&\n          <Form\n            onSubmit={onSubmit}\n            mutators={{ setFieldData, ...arrayMutators }}\n            initialValues={data}\n            render={(props) => {\n              return (\n                <form onSubmit={props.handleSubmit}>\n                  {this.renderNestedForm(props)}\n                </form>\n              );\n            }}\n          />\n        }\n      </div>);\n  }\n}\n","import React, { Fragment } from 'react'; // eslint-disable-line no-unused-vars\nimport ReactDOM from 'react-dom';\nimport moment from 'moment';\nimport DetailForm from './DetailForm.jsx'; // eslint-disable-line no-unused-vars\n\nconst metadata = {\n  title: 'My form',\n  fields: [{\n    key: 'text',\n    type: 'string',\n    label: 'Text',\n  }, {\n    key: 'textarea',\n    type: 'string',\n    label: 'Text Area',\n    formType: 'textarea',\n  }, {\n    key: 'phone',\n    type: 'string',\n    label: 'Phone',\n    formType: 'phone',\n  }, {\n    key: 'number',\n    type: 'number',\n    label: 'Number',\n  }, {\n    key: 'date',\n    type: 'string',\n    label: 'Date',\n    formType: 'date',\n  }, {\n    key: 'dateWithParseFunction',\n    type: 'string',\n    label: 'Date with parse function',\n    formType: 'date',\n    formFormatFunction(value) {\n      return moment(value).format('YYYY-MM-DD');\n    },\n    formParseFunction(value) {\n      return moment(value).toISOString();\n    }\n  }, {\n    key: 'dateTime',\n    type: 'string',\n    label: 'Date Time',\n    formType: 'datetime',\n  }, {\n    key: 'disabledField',\n    type: 'string',\n    label: 'Disabled Field',\n    isDisabled: true,\n  }, {\n    key: 'notRequired',\n    type: 'string',\n    label: 'Not Required field',\n    isRequired: false,\n  }, {\n    key: 'radio',\n    type: 'number',\n    label: 'Radio',\n    formType: 'Radio',\n    formOptions: [\n      { label: '1', value: 1 },\n      { label: '2', value: 2 },\n      { label: '3', value: 3 },\n    ],\n  }, {\n    key: 'radio2',\n    type: 'number',\n    label: 'Radio',\n    formType: 'Radio',\n    formOptions: [\n      { label: 'a', value: 'a' },\n      { label: 'b', value: 'b' },\n      { label: 'c', value: 'c' },\n    ],\n  }, {\n    key: 'profile.address',\n    type: 'Array',\n    label: 'Address',\n    formType: 'InputArray',\n    formInputArrayObject: [{\n      key: 'street',\n      label: 'Street',\n    }, {\n      key: 'city',\n      label: 'City',\n    }, {\n      key: 'state',\n      label: 'State',\n    }, {\n      key: 'zipCode',\n      label: 'Zip Code',\n    }]\n  }, {\n    key: 'selectObject',\n    type: 'Object',\n    label: 'Select Object',\n    formType: 'Object',\n    formObjects: [{\n      key: 'prop1',\n      type: 'Number',\n      label: 'Prop 1',\n      formType: 'Select',\n      formOptions: [\n        { label: '1', value: 1 },\n        { label: '2', value: 2 },\n        { label: '3', value: 3 },\n      ]\n    }, {\n      key: 'prop2',\n      type: 'Number',\n      label: 'Prop 2',\n      formType: 'Radio',\n      formOptions: [\n        { label: 'a', value: 'a' },\n        { label: 'b', value: 'b' },\n        { label: 'c', value: 'c' },\n      ],\n    }],\n  }, {\n    key: 'checkbox',\n    type: 'Array',\n    label: 'Checkbox',\n    formType: 'Checkbox',\n    formOptions: [\n      { label: 'English', value: 'English' },\n      { label: 'Mandarin', value: 'Mandarin' },\n      { label: 'Spanish', value: 'Spanish' },\n      { label: 'Cantonese', value: 'Cantonese' },\n      { label: 'Vietnamese', value: 'Vietnamese' },\n      { label: 'Tagalog', value: 'Tagalog' },\n      { label: 'Malay', value: 'Malay' },\n      { label: 'Korean', value: 'Korean' },\n      { label: 'Japanese', value: 'Japanese' },\n      { label: 'French', value: 'French' },\n      { label: 'German', value: 'German' },\n    ],\n  }, ]\n};\n\nconst data = {\n  text: 'Value',\n  textarea: \"abc\\n123\\nabc\",\n  phone: '1231231231',\n  number: 1024,\n  date: '2019-02-01',\n  dateWithParseFunction: '2019-01-21T08:00:00.000Z',\n  dateTime: '2019-01-21T12:59:01',\n  disabledField: 'Disabled',\n  radio: 1,\n  radio2: 'c',\n  profile: {\n    address: [{ street: 'my st', city: 'Irvine', state: 'CA', zipCode: '92603' }]\n  },\n  selectObject: {\n    prop1: 1,\n    prop2: 'b',\n  },\n  checkbox: ['Mandarin', 'French']\n};\n\nfunction App() { // eslint-disable-line no-unused-vars\n  return (\n    <Fragment>\n      <h1>React Material Final Form</h1>\n      <DetailForm \n        title={metadata.title}\n        metadata={metadata}\n        data={data}\n        debug={true}\n        onSubmit={console.log}\n      />\n    </Fragment>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root')); // eslint-disable-line no-undef\n"],"sourceRoot":""}